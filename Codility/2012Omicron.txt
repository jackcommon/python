The Fibonacci sequence is defined by the following recursive formula:
    F(0) = 0
    F(1) = 1
    F(N) = F(N-1) + F (N-1) for N >=2
Write a function
    def solution(N, M)
that, give two non-negative integers N and M, returns a remainder of F(N^M) modulo 10,000,103.
Note: 10,000,103 is a prime number.
For example, given N = 2 and M = 3, the function should return 21, since 2^3 = 8 and F(8) = 21.
Assume that:
    . N and M are integers within the range [0..10,000,000];
Complexity:
    . expected worst-case time complexity is O(log(N*M));
    . expected worst-case space complexity is O(1).